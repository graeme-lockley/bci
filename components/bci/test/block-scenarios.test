### RET
. Block: RET: empty stack
RET
> OK, result: 0

. Block: RET: Invalid stack
PUSH_TRUE
PUSH_S32 10
RET
> Ret invalid stack at 0007



### RET_BOOL
. Block: RET_BOOL True
PUSH_TRUE
RET_BOOL
> OK, result: 1

. Block: RET_BOOL False
PUSH_FALSE
RET_BOOL
> OK, result: 0

. Block: RET_BOOL: Invalid argument
PUSH_S32 10
RET_BOOL
> Invalid argument types for RET_BOOL at 0006

. Block: RET_BOOL: Invalid stack
PUSH_S32 10
PUSH_TRUE
RET_BOOL
> Ret invalid stack at 0007



### RET_S32
. Block: RET_S32
PUSH_S32 100
RET_S32
> OK, result: 100

. Block: RET_S32: Invalid argument
PUSH_TRUE
RET_S32
> Invalid argument types for RET_S32 at 0002

. Block: RET_S32: Invalid stack
PUSH_TRUE
PUSH_S32 10
RET_S32
> Ret invalid stack at 0007



### ADD_S32
. Block: ADD_S32
PUSH_S32 42
PUSH_S32 -5
ADD_S32
RET_S32
> OK, result: 37

. Block: ADD_S32: Underflow
PUSH_S32 42
ADD_S32
RET_S32
> Stack underflow at 0006

. Block: ADD_S32: Invalid Argument
PUSH_S32 42
PUSH_TRUE
ADD_S32
RET_S32
> Invalid argument types for ADD_S32 at 0007



### SUB_S32
. Block: SUB_S32
PUSH_S32 42
PUSH_S32 -5
SUB_S32
RET_S32
> OK, result: 47

. Block: SUB_S32: Underflow
PUSH_S32 42
SUB_S32
RET_S32
> Stack underflow at 0006

. Block: SUB_S32: Invalid Argument
PUSH_S32 42
PUSH_TRUE
SUB_S32
RET_S32
> Invalid argument types for SUB_S32 at 0007



### MUL_S32
. Block: MUL_S32
PUSH_S32 42
PUSH_S32 -5
MUL_S32
RET_S32
> OK, result: -210

. Block: MUL_S32: Underflow
PUSH_S32 42
MUL_S32
RET_S32
> Stack underflow at 0006

. Block: MUL_S32: Invalid Argument
PUSH_S32 42
PUSH_TRUE
MUL_S32
RET_S32
> Invalid argument types for MUL_S32 at 0007



### DIV_S32
. Block: DIV_S32
PUSH_S32 42
PUSH_S32 -5
DIV_S32
RET_S32
> OK, result: -8

. Block: DIV_S32: Underflow
PUSH_S32 42
DIV_S32
RET_S32
> Stack underflow at 0006

. Block: DIV_S32: Invalid Argument
PUSH_S32 42
PUSH_TRUE
DIV_S32
RET_S32
> Invalid argument types for DIV_S32 at 0007

. Block: DIV_S32: Division by zero
PUSH_S32 42
PUSH_S32 0
DIV_S32
RET_S32
> Division by zero at 000b



### JMP
. Block: JMP
JMP BLOCK1

BLOCK BLOCK1
RET

> OK, result: 0

. Block: JMP: Unknown label
JMP BLOCK2

BLOCK BLOCK1
RET

> Invalid label "BLOCK2"


### JMP_TRUE
. Block: JMP_TRUE: True
PUSH_TRUE
JMP_TRUE BLOCK1
PUSH_FALSE
RET_BOOL

BLOCK BLOCK1
PUSH_TRUE
RET_BOOL

> OK, result: 1

. Block: JMP_TRUE: FALSE
PUSH_FALSE
JMP_TRUE BLOCK1
PUSH_FALSE
RET_BOOL

BLOCK BLOCK1
PUSH_TRUE
RET_BOOL

> OK, result: 0



### JMP_FALSE
. Block: JMP_FALSE: True
PUSH_TRUE
JMP_FALSE BLOCK1
PUSH_FALSE
RET_BOOL

BLOCK BLOCK1
PUSH_TRUE
RET_BOOL

> OK, result: 0

. Block: JMP_FALSE: FALSE
PUSH_FALSE
JMP_FALSE BLOCK1
PUSH_FALSE
RET_BOOL

BLOCK BLOCK1
PUSH_TRUE
RET_BOOL

> OK, result: 1
